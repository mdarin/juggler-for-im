#!/usr/bin/perl -w
my $progname =  "imiator spawner";
# Spawn starts the infrastructure for executing compelx + more the zero imitators
my $ver = "0.1b";
use warnings;
use strict;
use autodie;
use Socket;

my $usage = "Usage spawn complex imitator{imitator} uid profile";

die $usage
	if (4 > @ARGV);

#my $nargs = @ARGV;
#print "narsgs: $nargs\n";

# такой разбор для комондной строки на версию пока подйдёт
#my $complex = shift @ARGV;
#my $profile = pop @ARGV;
#my $uid = pop @ARGV;
#$my $imitators = [@ARGV];

#print "complex: $complex\n";
#print "profile: $profile\n";
#print "uid: $uid\n";
#foreach my $im (@$imitators) {
#	print " - $im\n";
#}

my $csock; # client socket for serer's response
my $sport = 38216; # server port
my $shostname = "lacalhost";


socket($csock, PF_INET, SOCK_DGRAM, getprotobyname("udp"))
	or die "open socket: $!";

setsockopt($csock, SOL_SOCKET, SO_REUSEADDR, 1)
	or die "set sock opt: $!";

# send request to the server
print "SPAWN::Sending to \"localhost\":$sport\n";
my $destpaddr = sockaddr_in($sport, inet_aton("localhost"));#inet_aton($shostname));
send($csock, "spawn @ARGV", 0, $destpaddr)
	or die "send: $!";

my $inmask = q(); # string to store the fileno bits for select
vec($inmask, fileno($csock), 1) = 1;
# waiting for server response
while (select(my $outmask = $inmask, undef, undef, 10)) {
	# proces client request
	defined(my $srcpaddr = recv($csock, my $response, 2048, 0))
		or die "recv: $!";
	my($sport, $shostname) = sockaddr_in($srcpaddr);
	my $serverhost = sprintf "%s [%s:%s]",
	gethostbyaddr($shostname, AF_INET) || "UNKNOWN",
	inet_ntoa($shostname),	
	$sport;
	print "SPAWN::server: $serverhost response: [$response]\n";
	last if $response;
}

close $csock; 
